generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model achievements {
  id                Int                 @id @default(autoincrement())
  name              String?             @db.VarChar(255)
  description       String?             @db.Text
  required_level    Int                 @default(0)
  required_subs     Int                 @default(0)
  required_gifts    Int                 @default(0)
  required_quiz     Int                 @default(0)
  required_messages Int                 @default(0)
  required_bits     Int                 @default(0)
  required_guess    Int                 @default(0)
  img               String              @db.VarChar(255)
  user_achievements user_achievements[]
}

model pets {
  id                          Int                 @id @default(autoincrement())
  userId                      String              @unique(map: "userId") @db.VarChar(255)
  name                        String              @db.VarChar(255)
  imageUrl                    String              @db.VarChar(1024)
  xp                          Int?                @default(0)
  level                       Int?                @default(1)
  subs                        Int                 @default(0)
  gifts                       Int                 @default(0)
  messages                    Int                 @default(0)
  bits                        Int                 @default(0)
  guess                       Int                 @default(0)
  quiz                        Int                 @default(0)
  pointsUsed                  Int?                @default(0)
  messagesOC                  Int                 @default(0)
  reward                      DateTime            @default(dbgenerated("'2024-04-06'")) @db.Date
  duels_duels_player1IdTopets duels[]             @relation("duels_player1IdTopets")
  duels_duels_player2IdTopets duels[]             @relation("duels_player2IdTopets")
  duels_duels_winnerIdTopets  duels[]             @relation("duels_winnerIdTopets")
  playercards                 playercards[]
  secretsdiscovered           secretsdiscovered[]
  user_achievements           user_achievements[]
  war                         warPlayers?
}

model user_achievements {
  user_id        String       @db.VarChar(255)
  achievement_id Int
  pets           pets         @relation(fields: [user_id], references: [userId], onDelete: NoAction, onUpdate: NoAction, map: "user_achievements_ibfk_1")
  achievements   achievements @relation(fields: [achievement_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "user_achievements_ibfk_2")

  @@id([user_id, achievement_id])
  @@index([achievement_id], map: "achievement_id")
}

model product {
  id      Int    @id @default(autoincrement())
  name    String @db.VarChar(255)
  price   Float  @db.Float
  picture String @db.VarChar(255)
}

model card {
  id           Int           @id @default(autoincrement())
  name         String        @db.VarChar(255)
  picture      String        @db.VarChar(255)
  picture_back String        @map("picture-back") @db.VarChar(255)
  isDraw       Boolean
  evolvedId    Int?
  evolveCost   Int?
  category     String        @db.VarChar(55)
  rarety       String        @db.VarChar(55)
  dropRate     Int           @default(0)
  number       Int?
  card         card?         @relation("cardTocard", fields: [evolvedId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "card_ibfk_1")
  other_card   card[]        @relation("cardTocard")
  passifcards  passifcards[]
  playercards  playercards[]

  @@index([evolvedId], map: "evolvedId")
}

model playercards {
  petId    String  @db.VarChar(255)
  cardId   Int
  count    Int
  isInDeck Boolean @default(false)
  isNew    Boolean @default(false)
  card     card    @relation(fields: [cardId], references: [id], onDelete: Cascade, map: "playercards_ibfk_1")
  pets     pets    @relation(fields: [petId], references: [userId], onDelete: Cascade, map: "playercards_ibfk_2")

  @@id([petId, cardId])
  @@index([cardId], map: "playercards_ibfk_1")
}

model duels {
  uuid                       String    @id @db.VarChar(255)
  player1Id                  String?   @db.VarChar(255)
  player2Id                  String?   @db.VarChar(255)
  winnerId                   String?   @db.VarChar(255)
  bet                        Int       @default(0)
  status                     String    @default("waiting") @db.VarChar(255)
  isOnP1                     Int       @default(0) @db.TinyInt
  isOnP2                     Int       @default(0) @db.TinyInt
  lastTimeP1                 DateTime? @db.Timestamp(0)
  lastTimeP2                 DateTime? @db.Timestamp(0)
  pets_duels_player1IdTopets pets?     @relation("duels_player1IdTopets", fields: [player1Id], references: [userId], onDelete: Cascade, map: "duels_ibfk_1")
  pets_duels_player2IdTopets pets?     @relation("duels_player2IdTopets", fields: [player2Id], references: [userId], onDelete: Cascade, map: "duels_ibfk_2")
  pets_duels_winnerIdTopets  pets?     @relation("duels_winnerIdTopets", fields: [winnerId], references: [userId], onDelete: Cascade, map: "duels_ibfk_3")

  @@index([player1Id], map: "duels_ibfk_1")
  @@index([player2Id], map: "duels_ibfk_2")
  @@index([winnerId], map: "duels_ibfk_3")
}

model passif {
  id               Int           @id @default(autoincrement())
  description      String        @db.VarChar(255)
  hit              Int           @default(0)
  heal             Int           @default(0)
  damagePhy        Int           @default(0)
  damageElem       Int           @default(0)
  damageStandard   Int           @default(0)
  damageSlash      Int           @default(0)
  damageStrike     Int           @default(0)
  damagePierce     Int           @default(0)
  damageMagique    Int           @default(0)
  damageFire       Int           @default(0)
  damageLightning  Int           @default(0)
  damageHoly       Int           @default(0)
  randomCount      Int           @default(0)
  defensePhy       Int           @default(0)
  defenseElem      Int           @default(0)
  defenseStandard  Int           @default(0)
  defenseSlash     Int           @default(0)
  defenseStrike    Int           @default(0)
  defensePierce    Int           @default(0)
  defenseMagique   Int           @default(0)
  defenseFire      Int           @default(0)
  defenseLightning Int           @default(0)
  defenseHoly      Int           @default(0)
  hp               Int           @default(0)
  passifcards      passifcards[]
}

model passifcards {
  cardId   Int
  passifId Int
  name     String @db.VarChar(255)
  card     card   @relation(fields: [cardId], references: [id], onDelete: Cascade, map: "passifcards_ibfk_1")
  passif   passif @relation(fields: [passifId], references: [id], onDelete: Cascade, map: "passifcards_ibfk_2")

  @@id([cardId, passifId])
  @@index([passifId], map: "passifcards_ibfk_2")
}

model secrets {
  secretId          Int                 @id @default(autoincrement())
  secretName        String              @db.VarChar(255)
  secretsdiscovered secretsdiscovered[]
}

model secretsdiscovered {
  userId   String  @db.VarChar(255)
  secretId Int
  pets     pets    @relation(fields: [userId], references: [userId], onDelete: NoAction, onUpdate: NoAction, map: "secretsdiscovered_ibfk_1")
  secrets  secrets @relation(fields: [secretId], references: [secretId], onDelete: NoAction, onUpdate: NoAction, map: "secretsdiscovered_ibfk_2")

  @@id([userId, secretId])
  @@index([secretId], map: "secretId")
}

model map {
  id          Int           @id @default(autoincrement())
  position_x  Int
  position_y  Int
  image_url   String        @db.VarChar(255)
  warMonsters warMonsters[]
  warPlayers  warPlayers[]
}

model warPlayers {
  petId             String              @id @db.VarChar(255)
  name              String?             @db.VarChar(255)
  imageUrl          String?             @db.VarChar(255)
  mapId             Int?
  str               Int                 @default(1)
  hit               Int                 @default(0)
  level             Int                 @default(1)
  xp                Int                 @default(0)
  hp                Int                 @default(50)
  hpMax             Int                 @default(50)
  dex               Int                 @default(1)
  intel             Int                 @default(1)
  defP              Int                 @default(1)
  defM              Int                 @default(1)
  acu               Int                 @default(1)
  isDied            DateTime?           @db.DateTime(0)
  pa                Int                 @default(30)
  paMax             Int                 @default(30)
  regen             Int                 @default(2)
  crit              Int                 @default(5)
  defMStand         Int                 @default(1)
  defPStand         Int                 @default(1)
  defFire           Int                 @default(1)
  defStrike         Int                 @default(1)
  defLightning      Int                 @default(1)
  defSlash          Int                 @default(1)
  defHoly           Int                 @default(1)
  defPierce         Int                 @default(1)
  levelChoices      Json?
  AnimalKills       Int                 @default(0)
  PlanteKills       Int                 @default(0)
  Humano_deKills    Int                 @default(0) @map("Humano√ØdeKills")
  warMessages       warMessages[]
  warPlayerItems    warPlayerItems[]
  warPlayerSkills   warPlayerSkills[]
  warPlayerTrophies warPlayerTrophies[]
  pets              pets                @relation(fields: [petId], references: [userId], onDelete: Cascade, map: "war_ibfk_1")
  map               map?                @relation(fields: [mapId], references: [id], onDelete: Cascade, map: "warPlayers_ibfk_2")

  @@index([mapId], map: "warPlayers_ibfk_2")
}

model warPlayerSkills {
  petId      String     @db.VarChar(255)
  skillId    Int
  createdAt  DateTime   @default(now()) @db.DateTime(0)
  isSelected Boolean    @default(false)
  warPlayers warPlayers @relation(fields: [petId], references: [petId], onDelete: Cascade, map: "warPlayerSkills_ibfk_1")
  warSkills  warSkills  @relation(fields: [skillId], references: [id], onDelete: Cascade, map: "warPlayerSkills_ibfk_2")

  @@id([petId, skillId])
  @@index([skillId], map: "warPlayerSkills_ibfk_2")
}

model warSkills {
  id               Int                @id @default(autoincrement())
  name             String             @db.VarChar(255)
  hit              Int
  description      String             @db.VarChar(255)
  dmgMin           Int
  dmgMax           Int
  type             String             @db.VarChar(55)
  cost             Int
  dist             Int
  divider          Int
  stat             String?            @db.VarChar(55)
  img              String?            @db.VarChar(255)
  crit             Int?
  dmgType          String?            @db.VarChar(255)
  upStr            Int                @default(0)
  upIntel          Int                @default(0)
  upHit            Int                @default(0)
  upCrit           Int                @default(0)
  upHp             Int                @default(0)
  upRegen          Int                @default(0)
  upAcu            Int                @default(0)
  upDex            Int                @default(0)
  upDefPStand      Int                @default(0)
  upDefMStand      Int                @default(0)
  upDefStrike      Int                @default(0)
  upDefFire        Int                @default(0)
  upDefSlash       Int                @default(0)
  upDefLightning   Int                @default(0)
  upDefPierce      Int                @default(0)
  upDefHoly        Int                @default(0)
  upDefP           Int                @default(0)
  upDefM           Int                @default(0)
  warMonsterLoots  warMonsterLoots[]
  warMonsterSkills warMonsterSkills[]
  warPlayerSkills  warPlayerSkills[]
}

model warMessages {
  id         Int        @id @default(autoincrement())
  petId      String     @db.VarChar(255)
  message    String     @db.VarChar(255)
  createdAt  DateTime   @default(now()) @db.DateTime(0)
  readed     Boolean    @default(false)
  expiresAt  DateTime?  @default(dbgenerated("(now() + interval 7 day)")) @db.DateTime(0)
  warPlayers warPlayers @relation(fields: [petId], references: [petId], onDelete: Cascade, map: "warMessages_ibfk_1")

  @@index([petId], map: "petId")
}

model warLevelChoices {
  id       Int    @id @default(autoincrement())
  name     String @db.VarChar(55)
  imageUrl String @db.VarChar(255)
  str      Int    @default(0)
  hp       Int    @default(0)
  dex      Int    @default(0)
  intel    Int    @default(0)
  acu      Int    @default(0)
  defP     Int    @default(0)
  defM     Int    @default(0)
}

model monsters {
  id               Int                @id @default(autoincrement())
  name             String             @db.VarChar(55)
  imageUrl         String             @db.VarChar(255)
  level            Int
  hit              Int                @default(0)
  crit             Int                @default(5)
  hpMin            Int
  hpMax            Int
  strMin           Int
  strMax           Int
  intelMin         Int
  intelMax         Int
  dexMin           Int
  dexMax           Int
  defPMin          Int
  defPMax          Int
  defMMin          Int
  defMMax          Int
  acuMin           Int
  acuMax           Int
  defMStandMin     Int
  defMStandMax     Int
  defPStandMin     Int
  defPStandMax     Int
  defFireMin       Int
  defFireMax       Int
  defStrikeMin     Int
  defStrikeMax     Int
  defLightningMin  Int
  defLightningMax  Int
  defSlashMin      Int
  defSlashMax      Int
  defHolyMin       Int
  defHolyMax       Int
  defPierceMin     Int
  defPierceMax     Int
  lootCount        Int                @default(2)
  type             String             @db.VarChar(55)
  warMonsterLoots  warMonsterLoots[]
  warMonsterSkills warMonsterSkills[]
  warMonsters      warMonsters[]
}

model warItems {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(55)
  description     String            @db.VarChar(255)
  imageUrl        String            @db.VarChar(255)
  pa              Int?
  hp              Int?
  card            Boolean           @default(false)
  point           Int?
  warMonsterLoots warMonsterLoots[]
  warPlayerItems  warPlayerItems[]
}

model warMonsterLoots {
  id        Int        @id @default(autoincrement())
  monsterId Int
  itemId    Int?
  skillId   Int?
  count     Int?
  value     Int
  warItems  warItems?  @relation(fields: [itemId], references: [id], onDelete: Cascade, map: "warMonsterLoots_ibfk_1")
  monsters  monsters   @relation(fields: [monsterId], references: [id], onDelete: Cascade, map: "warMonsterLoots_ibfk_2")
  warSkills warSkills? @relation(fields: [skillId], references: [id], onDelete: Cascade, map: "warMonsterLoots_ibfk_3")

  @@index([itemId], map: "itemId")
  @@index([monsterId], map: "monsterId")
  @@index([skillId], map: "skillId")
}

model warMonsterSkills {
  id        Int       @id @default(autoincrement())
  monsterId Int
  skillId   Int
  monsters  monsters  @relation(fields: [monsterId], references: [id], onDelete: Cascade, map: "warMonsterSkills_ibfk_1")
  warSkills warSkills @relation(fields: [skillId], references: [id], onDelete: Cascade, map: "warMonsterSkills_ibfk_2")

  @@index([monsterId], map: "monsterId")
  @@index([skillId], map: "skillId")
}

model warPlayerItems {
  petId      String     @db.VarChar(255)
  itemId     Int
  count      Int
  warItems   warItems   @relation(fields: [itemId], references: [id], onDelete: Cascade, map: "warPlayerItems_ibfk_1")
  warPlayers warPlayers @relation(fields: [petId], references: [petId], onDelete: Cascade, map: "warPlayerItems_ibfk_2")

  @@unique([petId, itemId], map: "petId")
  @@index([itemId], map: "itemId")
}

model warMonsters {
  id           Int      @id @default(autoincrement())
  monsterId    Int
  mapId        Int
  level        Int
  hp           Int
  hpMax        Int
  str          Int
  intel        Int
  dex          Int
  acu          Int
  hit          Int
  defP         Int
  defM         Int
  crit         Int
  defMStand    Int
  defPStand    Int
  defFire      Int
  defStrike    Int
  defLightning Int
  defSlash     Int
  defHoly      Int
  defPierce    Int
  monsters     monsters @relation(fields: [monsterId], references: [id], onDelete: Cascade, map: "warMonsters_ibfk_1")
  map          map      @relation(fields: [mapId], references: [id], onDelete: Cascade, map: "warMonsters_ibfk_2")

  @@index([mapId], map: "mapId")
  @@index([monsterId], map: "monsterId")
}

model warTrophies {
  id                Int                 @id @default(autoincrement())
  name              String              @db.VarChar(255)
  milestone         Int
  monsterType       String              @db.VarChar(55)
  imageUrl          String              @db.VarChar(255)
  hp                Int                 @default(0)
  intel             Int                 @default(0)
  str               Int                 @default(0)
  dex               Int                 @default(0)
  acu               Int                 @default(0)
  hit               Int                 @default(0)
  crit              Int                 @default(0)
  defM              Int                 @default(0)
  defP              Int                 @default(0)
  defMStand         Int                 @default(0)
  defPStand         Int                 @default(0)
  defFire           Int                 @default(0)
  defStrike         Int                 @default(0)
  defLightning      Int                 @default(0)
  defSlash          Int                 @default(0)
  defHoly           Int                 @default(0)
  defPierce         Int                 @default(0)
  warPlayerTrophies warPlayerTrophies[]
}

model warPlayerTrophies {
  petId       String      @db.VarChar(255)
  trophyId    Int
  warTrophies warTrophies @relation(fields: [trophyId], references: [id], onDelete: Cascade, map: "warPlayerTrophies_ibfk_1")
  warPlayers  warPlayers  @relation(fields: [petId], references: [petId], onDelete: Cascade, map: "warPlayerTrophies_ibfk_2")

  @@id([petId, trophyId])
  @@unique([petId, trophyId], map: "PPRIMARY")
  @@index([trophyId], map: "trophyId")
}
